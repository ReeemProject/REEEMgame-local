extends _layout
// worlds
// worlds_playing
// facilitatorID
block content
   script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.7.3/socket.io.js')
   script.
     //var handler = FacilitatorMainScreenHandler.getInstance();
   h2(style='padding:5px') World administration for #{facilitatorName}
   form(method='GET' action='#{path}'  id="signOutForm").form-group

   button(id='signOutBtn' type='submit' onclick='signOut()' style='margin:5px') Sign out

   form(method='POST' action='#{path}/createWorld' style='padding:5px')
            
            input(type='hidden' name='facilitatorID', value=facilitatorID)
            input(type='hidden' value = facilitatorName name= 'facilitatorName')
            input(type='hidden' value = facilitatorPassword name= 'facilitatorPassword')
            button(type='submit') Create World
   h3(style='padding:5px') Worlds Created
   .col-md-1            
            p World ID
   .col-md-1   
            p Name 
   .col-md-1 
             p(style='visibility:hidden') Scenario
   .col-md-3 
            p Controls
   .col-md-3
       .row
             .col-md-2 
                p Status
             .col-md-2 
                 p Month
             .col-md-2 
                 p Year
             .col-md-3 
                  p Score
             .col-md-3 
                p Highscore
   .col-md-1 
             p(style='visibility:hidden') Link 
   .col-md-2 
             p(style='visibility:hidden') link
   each world in worlds
        .row
          .col-md-1            
            div(style="margin-left:18%") #{world.idcode} 
          .col-md-1   
            div(style="margin-left:12%") #{world.name} 
        
            div(style='visibility:hidden').dropdown
               button.dropdown-toggle(id='scenario'+'#{world.idcode}',type='button' data-toggle='dropdown') #{world.scenario}
               ul.dropdown-menu
                  each scenario in scenarios
                    li.a(href='#') 
                      if (world.scenario != scenario.name) 
                        button.dropdownButton(id='#{scenario.id}'+'#{world.idcode}') #{scenario.name}
                      if (world.scenario == scenario.name) 
                         button.dropdownButton(id='#{scenario.id}'+'#{world.idcode}', style="display:none") #{scenario.name} 
          .col-md-1    
             form(method='POST' action='#{path}/deleteWorld' style='display: inline')                
                  input(type='hidden' value = world.idcode name= 'worldIdCode')
                  input(type='hidden' value = facilitatorID name= 'userID')
                  button().pull-left.btn-xs(type='submit') Delete
          .col-md-3
             form(method='POST' action='#{path}/facilitatorWorldView' style='display: inline')
                label(for='name') 
                input(type='hidden' value = world.idcode name= 'worldIdCode')
                input(type='hidden' value = facilitatorID name= 'userID')
                input(type='hidden' value = facilitatorName name= 'username')
                input(type='hidden' value = facilitatorPassword name= 'facilitatorPassword')
                input(type='hidden' value = '#{permissions.player}' name= 'permissionsPlayer')
                input(type='hidden' value = '#{permissions.controller}' name= 'permissionsController')
                button.pull-left.btn-xs(type='submit') Manage
          
             if (world.status == 1)
                button.pull-left.btn-xs(id='startButton'+world.idcode, hidden='true') Start
                button.pull-left.btn-xs(id='stopButton'+world.idcode) Pause
             if (world.status != 1) 
               button.pull-left.btn-xs(id='startButton'+world.idcode) Start
               button.pull-left.btn-xs(id='stopButton'+world.idcode, hidden='true') Pause
             button.pull-left.btn-xs(id="reset"+world.idcode) Reset Time
             button.pull-left.btn-xs(id="fastButton"+world.idcode) x2
             button.pull-left.btn-xs(id="fullspeed"+world.idcode) fullspeed

          .col-md-3
            .row
               .col-md-2
                 div(id='status' + world.idcode).date
               .col-md-2
                 div(id='month' + world.idcode).date 
               .col-md-2
                 div(id='year' + world.idcode).date
               .col-md-3
                 div(id='score' + world.idcode).date
               .col-md-3
                 div(id='highscore' + world.idcode).date
          .col-md-1
             p 
               //a(id='#{world.idcode}' href='http://www.reeem.org#{path}/enterWorld?worldPassword=#{world.idcode}') Link to World
               a(id='#{world.idcode}' href='#{path}/?worldPassword=#{world.idcode}') Link to World
               //a(href='http://52.209.170.126:5000#{path}/enterWorld?worldPassword=#{world.idcode}') Link to World
          .col-md-2
             button.pull-left.btn-xs(id='copyLink'+world.idcode data-copytarget="#website"+world.idcode) Copy link to clipboard
   h3(style='padding:5px') Worlds Playing
   each world in worlds_playing
        .row
          .col-md-1            
            div(style="margin-left:18%") #{world.idcode} 
          .col-md-1   
            div(style="margin-left:12%") #{world.name} 
          .col-md-3
             form(method='POST' action='#{path}/playerWorldView' style='display: inline')
                label(for='name') 
                input(type='hidden' value = world.idcode name= 'worldIdCode')
                input(type='hidden' value = facilitatorID name= 'facilitatorID')
                input(type='hidden' value = facilitatorName name= 'facilitatorName')
                input(type='hidden' value = facilitatorPassword name= 'facilitatorPassword')
                input(type='hidden' value = 'true' name= 'permissionsPlayer')
                input(type='hidden' value = 'false' name= 'permissionsController')
                button.pull-left.btn-xs(type='submit') Play  
             form(method='POST' action='#{path}/FacilitatorRemovePlayingWorld' style='display: inline')
                button.pull-left.btn-xs(id='remove_playing_world' type='submit') Leave
                input(type='hidden' value = world.idcode name= 'worldIdCode')
                input(type='hidden' value = facilitatorID name= 'facilitatorID')
                input(type='hidden' value = facilitatorName name= 'facilitatorName')
   script(src="/express-public" + version + "/dist/facilitatorMainBundle.js")
   script(src='/express-public' + version + '/dist/connectionMainBundle.js')

   script(script src="https://apis.google.com/js/platform.js?onload=onLoad" async defer)

   script.
     $(function() {
       var worlds = !{JSON.stringify(worlds)};
       var worldIDs = []
       
       var scenarios = !{JSON.stringify(scenarios)};
       var path = "/game11/socket.io";
       var linkPath =  "/game11";
       var connection = new connectionMainBundle.MainScreenConnection(path,worldIDs); 
       new facilitatorMainBundle.FacilitatorMainScreenController(connection, worlds, linkPath,scenarios);
       
     });
      function onLoad() {
            gapi.load('auth2', function() {
            gapi.auth2.init();
         });
         }

        window.fbAsyncInit = function() {
            FB.init({
                appId      : '544916079183739',
                cookie     : true,
                xfbml      : true,
                version    : 'v2.10'
                });
            FB.AppEvents.logPageView();   
        };
        (function(d, s, id) {
             var js, fjs = d.getElementsByTagName(s)[0];
             if (d.getElementById(id)) return;
             js = d.createElement(s); js.id = id;
             js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.10&appId=544916079183739";
             fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
        function signOut() {
            //If user was logged in with facebook or google, the permissions need to be revoked first
            switch("#{loggedInWith}") {
                case "facebook":
                    console.log("was logged in with facebook");
                     FB.getLoginStatus(function(response) {
                        console.log("checking facebook response");
                        if (response.authResponse) {//If the person is logged into Facebook, and has logged into the app.
                            FB.api("/me/permissions","DELETE",function (response) {//Revoke the login permissions
                                console.log(response);
                            });
                         }
                         else {
                            console.log("User was not logged in with facebook");
                        }
                     });
                        
                    break;
                case "google":
                    console.log("was logged in with google");
                    gapi.auth2.getAuthInstance().signOut();
                    break;
                default:
                
                    break;
              }
              //Invoke the logout function on the server
              $("#loggedInWith").val("#{loggedInWith}");
                    $("#signOutForm").submit();
        }
 